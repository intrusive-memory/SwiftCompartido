//
//  TypedDataTextView.swift
//  SwiftCompartido
//
//  SwiftUI view for displaying text content from TypedDataStorage
//

import SwiftUI
import SwiftData

/// SwiftUI view for displaying text content from TypedDataStorage
///
/// Displays text from TypedDataStorage records with MIME type `text/*`.
/// Supports both in-memory and file-based storage.
///
/// ## Example
/// ```swift
/// TypedDataTextView(record: textRecord, storageArea: storage)
/// ```
@available(macOS 15.0, iOS 17.0, *)
public struct TypedDataTextView: View {

    // MARK: - Properties

    /// The text storage record to display
    let record: TypedDataStorage

    /// Optional storage area for file-based content
    let storageArea: StorageAreaReference?

    /// Loaded text content
    @State private var text: String = ""

    /// Error state
    @State private var error: Error?

    /// Loading state
    @State private var isLoading: Bool = true

    // MARK: - Initialization

    /// Creates a text view for a TypedDataStorage record
    ///
    /// - Parameters:
    ///   - record: The text storage record
    ///   - storageArea: Optional storage area for file-based content
    public init(record: TypedDataStorage, storageArea: StorageAreaReference? = nil) {
        self.record = record
        self.storageArea = storageArea
    }

    // MARK: - Body

    public var body: some View {
        Group {
            if isLoading {
                ProgressView("Loading text...")
            } else if let error = error {
                ErrorView(error: error)
            } else {
                ScrollView {
                    Text(text)
                        .textSelection(.enabled)
                        .padding()
                        .frame(maxWidth: .infinity, alignment: .leading)
                }
            }
        }
        .task {
            await loadText()
        }
    }

    // MARK: - Loading

    /// Loads text from the record
    private func loadText() async {
        do {
            text = try record.getText(from: storageArea)
            isLoading = false
        } catch {
            self.error = error
            isLoading = false
        }
    }
}

/// Error view for displaying load errors
@available(macOS 15.0, iOS 17.0, *)
private struct ErrorView: View {
    let error: Error

    var body: some View {
        VStack(spacing: 12) {
            Image(systemName: "exclamationmark.triangle")
                .font(.system(size: 48))
                .foregroundColor(.red)

            Text("Failed to load text")
                .font(.headline)

            Text(error.localizedDescription)
                .font(.caption)
                .foregroundColor(.secondary)
                .multilineTextAlignment(.center)
                .padding(.horizontal)
        }
        .padding()
    }
}

// MARK: - Preview

#if DEBUG
@available(macOS 15.0, iOS 17.0, *)
struct TypedDataTextView_Previews: PreviewProvider {
    static var previews: some View {
        let record = TypedDataStorage(
            providerId: "openai",
            requestorID: "gpt-4",
            mimeType: "text/plain",
            textValue: "This is a sample text content that was generated by an AI model. It demonstrates how the TypedDataTextView component displays text content from a TypedDataStorage record.",
            prompt: "Generate sample text",
            wordCount: 25,
            characterCount: 150
        )

        TypedDataTextView(record: record)
            .frame(width: 400, height: 300)
    }
}
#endif
