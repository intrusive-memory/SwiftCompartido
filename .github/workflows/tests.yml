name: Tests

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  test:
    name: Run Tests
    runs-on: macos-26

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Select Xcode
        run: sudo xcode-select -s /Applications/Xcode.app/Contents/Developer

      - name: Show Swift version
        run: swift --version

      - name: Build
        run: swift build

      - name: Run tests
        run: |
          set +e
          # Run all tests (performance tests are run separately in performance.yml workflow)
          swift test --enable-code-coverage > test_output.txt 2>&1
          TEST_EXIT_CODE=$?
          cat test_output.txt

          # Check if tests actually passed by looking for the success message
          if grep -q "Test run with .* tests in .* suites passed" test_output.txt; then
            echo "‚úÖ All tests passed"
            exit 0
          else
            echo "‚ùå Tests failed"
            exit $TEST_EXIT_CODE
          fi

      - name: Generate coverage report
        continue-on-error: true
        run: |
          # Swift 6.2 on macOS 26 has issues generating profdata
          # Make this step non-blocking until the issue is resolved
          if [ -f .build/debug/codecov/default.profdata ]; then
            xcrun llvm-cov export -format="lcov" \
              .build/debug/SwiftCompartidoPackageTests.xctest/Contents/MacOS/SwiftCompartidoPackageTests \
              -instr-profile .build/debug/codecov/default.profdata > coverage.lcov
          else
            echo "‚ö†Ô∏è  Coverage profdata not generated - skipping coverage report"
            exit 0
          fi

      - name: Upload coverage to Codecov
        if: hashFiles('coverage.lcov') != ''
        continue-on-error: true
        uses: codecov/codecov-action@v3
        with:
          files: ./coverage.lcov
          fail_ci_if_error: false

  catalyst-build:
    name: Mac Catalyst Build Check
    runs-on: macos-latest
    # Catalyst builds are informational - SwiftData has known limitations
    continue-on-error: true

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Select Xcode
        run: sudo xcode-select -s /Applications/Xcode.app/Contents/Developer

      - name: Show Swift version
        run: swift --version

      - name: Build for Mac Catalyst (x86_64)
        id: catalyst_x86
        continue-on-error: true
        run: |
          echo "Building for Mac Catalyst (x86_64)..."
          swift build \
            -Xswiftc "-target" \
            -Xswiftc "x86_64-apple-ios26.0-macabi" \
            2>&1 | tee catalyst_build_x86.log
          echo "x86_exit_code=$?" >> $GITHUB_OUTPUT

      - name: Build for Mac Catalyst (arm64)
        id: catalyst_arm64
        continue-on-error: true
        run: |
          echo "Building for Mac Catalyst (arm64)..."
          swift build \
            -Xswiftc "-target" \
            -Xswiftc "arm64-apple-ios26.0-macabi" \
            2>&1 | tee catalyst_build_arm64.log
          echo "arm64_exit_code=$?" >> $GITHUB_OUTPUT

      - name: Check for Catalyst-incompatible APIs
        run: |
          echo "Checking for macOS-specific APIs that may break Catalyst..."

          # Check for NSColor/windowBackgroundColor usage
          if grep -r "windowBackgroundColor\|NSColor\|NSFont" Sources/SwiftCompartido/UI --include="*.swift" | grep -v "#if os(macOS)"; then
            echo "‚ö†Ô∏è  Found potential macOS-only APIs without platform guards"
            exit 1
          else
            echo "‚úÖ No unguarded macOS-specific APIs found"
          fi

      - name: Upload build logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: catalyst-build-logs
          path: |
            catalyst_build_x86.log
            catalyst_build_arm64.log
          retention-days: 30

      - name: Generate Catalyst build summary
        if: always()
        run: |
          echo "## Mac Catalyst Build Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          if [ "${{ steps.catalyst_x86.outputs.x86_exit_code }}" == "0" ]; then
            echo "‚úÖ **x86_64**: Build succeeded" >> $GITHUB_STEP_SUMMARY
          else
            echo "‚ö†Ô∏è  **x86_64**: Build failed (known SwiftData limitation)" >> $GITHUB_STEP_SUMMARY
          fi

          if [ "${{ steps.catalyst_arm64.outputs.arm64_exit_code }}" == "0" ]; then
            echo "‚úÖ **arm64**: Build succeeded" >> $GITHUB_STEP_SUMMARY
          else
            echo "‚ö†Ô∏è  **arm64**: Build failed (known SwiftData limitation)" >> $GITHUB_STEP_SUMMARY
          fi

          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Known Limitations" >> $GITHUB_STEP_SUMMARY
          echo "SwiftData has limited Mac Catalyst support in current configuration." >> $GITHUB_STEP_SUMMARY
          echo "UI components are Catalyst-compatible where possible." >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "üìã Build logs available in [artifacts](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})" >> $GITHUB_STEP_SUMMARY

  lint:
    name: Code Quality
    runs-on: macos-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check for TODOs in committed code
        run: |
          if git diff origin/main...HEAD | grep -E "^\+.*TODO|^\+.*FIXME"; then
            echo "‚ö†Ô∏è  Warning: New TODOs or FIXMEs detected"
          fi

      - name: Check file sizes
        run: |
          find Sources -type f -name "*.swift" -size +100k -exec echo "‚ö†Ô∏è  Large file: {}" \;

      - name: Check for print statements
        run: |
          if grep -r "print(" Sources/ --include="*.swift" | grep -v "// print"; then
            echo "‚ö†Ô∏è  Warning: print() statements found in source code"
          fi
